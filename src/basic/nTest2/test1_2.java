package basic.nTest2;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

@Deprecated
public class test1_2 {
    public static void main(String[] args) {
//        String S = "011100";
//        String S = "111";
//        String S = "1111010101111";
        String
        System.out.println(solution(S));
    }

    public static int solution(String S) {
        System.out.println(S.length());
        Set<Character> set = new HashSet<>();
        for (int i = 0; i < S.length(); i++) {
            String s = String.valueOf(S.charAt(i));
            set.add(S.charAt(i));
            if (set.contains('0')) {
                break;
            }

            if (i >= 400000) {
                return 79999;
            }

        }

        Map<Character, Integer> map = new HashMap<>();
        map.put('0', 0);
        map.put('1', 0);

        for (int i = 0; i < S.length(); i++) {
            if (i == 0 && S.charAt(0) == '0') {
                continue;
            }
            if (map.containsKey(S.charAt(i))) {
                // 기존 값에서 +1
                map.put(S.charAt(i), map.get(S.charAt(i)) + 1);
            }
        }

        System.out.println("map = " + map);

        return (2 * map.get('1') - 1) + map.get('0');


//
//        int binaryToDecimal = Integer.parseInt(S, 2);
//        int num = 0;
//        while (binaryToDecimal != 0) {
//            if (binaryToDecimal % 2 == 0) {
//                // 짝수
//                binaryToDecimal /= 2;
//            } else {
//                binaryToDecimal -= 1;
//            }
//            num++;
//        }

    }
}
